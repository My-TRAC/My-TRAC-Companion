#apiVersion: extensions/v1beta1
#kind: Ingress
#metadata:
#  name: companion-backend-ing
#spec:
#  backend:
#    serviceName: companion-backend
#    servicePort: 4444
#--- 
apiVersion: v1
kind: Service
metadata:
  name: companion-backend
  labels:
    app: companion-backend
spec:
  type: NodePort 
  ports:
  - name: "server"
    port: 4444
  selector:
    app: companion-backend
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    app: companion-backend
  name: companion-backend
spec:
  serviceName: companion-backend
  replicas: 1
  template:
    metadata:
      labels:
        app: companion-backend
    spec:
      containers:
      - env:
          - name: DB_HOST
            value: 127.0.0.1:3306
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: cloudsql-db-credentials
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: cloudsql-db-credentials
                key: password
          - name: MYSQL_HOST
            value: 127.0.0.1
          - name: SCHEMA_REGISTRY_HOST_NAME
            value: cigo-schema-registry
          - name: KAFKA_CONNECT_HOST
            value: cigo-kafka-connect #cigo-kafka-connect.default.svc.cluster.local # value: kafka-connect
          - name: MYSQL_PORT
            value: "3306"
          - name: MYSQL_DATABASE
            value: mytrac
          - name: MYSQL_USER
            value: root
          - name: MYSQL_PASSWORD
            value: "1234"
          - name: TZ
            value: Europe/Madrid
        image: mytrac/companion-backend:v2.0 # 2.1 contiene el 0.0 as user_reputation
        #imagePullPolicy: Never
        imagePullPolicy: Always
        name: companion-backend 
        #        ports:
        #        - containerPort: 4568

      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances=buoyant-episode-216912:europe-west1:mysql-share=tcp:3306",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true

      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
      restartPolicy: Always
