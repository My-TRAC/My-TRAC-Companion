apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /home/maguila/gopath/src/github.com/kubernetes/kompose/kompose convert
    kompose.version: 1.18.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: polls-container
  name: polls-container
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: polls-container
    spec:
      containers:
      - name: polls-container
        image: mytrac/polls-api:v1.1.0
        ports:
          - containerPort: 8080
        env:
          - name: DB_HOST
            value: 127.0.0.1:3306
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: cloudsql-db-credentials
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: cloudsql-db-credentials
                key: password
          - name: BEEGO_RUNMODE
            value: "dev"
        volumeMounts:
        - name: deploy-conf
          mountPath: /root/conf
          readOnly: true

      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances=buoyant-episode-216912:europe-west1:mysql-share=tcp:3306",
                  "-credential_file=/secrets/cloudsql/credentials.json"]

        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true

      volumes:
        - name: deploy-conf
          secret:
            secretName: deploy-conf
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
      restartPolicy: Always
status: {}

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: /home/maguila/gopath/src/github.com/kubernetes/kompose/kompose convert
    kompose.version: 1.18.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: polls-container
  name: polls-container
spec:
  type: NodePort
  ports:
  - name: polls-server
    port: 8080
    #targetPort: 8080
  selector:
    io.kompose.service: polls-container
status:
  loadBalancer: {}


